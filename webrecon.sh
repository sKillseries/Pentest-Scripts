#!/bin/bash

enterprise=$1
url=$2

if [ ! -d "$enterprise" ];then
    mkdir $enterprise
fi
if [ ! -d "$enterprise/recon" ];then
    mkdir $enterprise/recon
fi
if [ ! -d "$enterprise/recon/web" ];then
    mkdir $enterprise/recon/web
fi
if [ ! -d '$enterprise/recon/web/eyewitness' ];then
    mkdir $enterprise/recon/web/eyewitness
fi
if [ ! -d "$enterprise/recon/web/scans" ];then
    mkdir $enterprise/recon/web/scans
fi
if [ ! -d "$enterprise/recon/web/httprobe" ];then
    mkdir $enterprise/recon/web/httprobe
fi
if [ ! -d "$enterprise/recon/web/potential_takeovers" ];then
    mkdir $enterprise/recon/web/potential_takeovers
fi
if [ ! -d "$enterprise/recon/web/wayback" ];then
    mkdir $enterprise/recon/web/wayback
fi
if [ ! -d "$enterprise/recon/web/wayback/params" ];then
    mkdir $enterprise/recon/web/wayback/params
fi
if [ ! -d "$enterprise/recon/web/wayback/extensions" ];then
    mkdir $enterprise/recon/web/wayback/extensions
fi
if [ ! -f "$enterprise/recon/web/httprobe/alive.txt" ];then
    touch $enterprise/recon/web/httprobe/alive.txt
fi
if [ ! -f "$enterprise/recon/web/final.txt" ];then
    touch $enterprise/recon/web/final.txt
fi

echo "[*] HTTP response headers checking..."
curl --location --head https://$url >> $enterprise/recon/web/curl.txt

echo "[*] Site crawling..."
echo $url | hakrawler -d 10 >> $enterprise/recon/web/hakrawler.txt

echo "[+] Harvesting subdomains with assetfinder..."
assetfinder $url >> $enterprise/recon/web/assets.txt
cat $enterprise/recon/web/assets.txt | grep $1 >> $enterprise/recon/web/final.txt
rm $enterprise/recon/web/assets.txt
 
echo "[+] Double checking for subdomains with amass..."
amass enum -d $url >> $enterprise/recon/web/f.txt
sort -u $enterprise/recon/web/f.txt >> $enterprise/recon/web/final.txt
rm $enterprise/recon/web/f.txt

echo "[+] dnsrecon enumeration and zone transfer..."
dnsrecon -a -d $url >> $enterprise/recon/web/dnsrecon.txt

echo "[+] Probing for alive domains..."
cat $enterprise/recon/web/final.txt | sort -u | httprobe -s -p https:443 | sed 's/https\?:\/\///' | tr -d ':443' >> $enterprise/recon/web/httprobe/a.txt
sort -u $enterprise/recon/web/httprobe/a.txt > $enterprise/recon/web/httprobe/alive.txt
rm $enterprise/recon/web/httprobe/a.txt
 
echo "[+] Checking for possible subdomain takeover..."
 
if [ ! -f "$enterprise/recon/web/potential_takeovers/potential_takeovers.txt" ];then
    touch $enterprise/recon/web/potential_takeovers/potential_takeovers.txt
fi
 
subjack -w $enterprise/recon/web/final.txt -t 100 -timeout 30 -ssl -c ~/go/src/github.com/haccer/subjack/fingerprints.json -v 3 -o $enterprise/recon/web/potential_takeovers/potential_takeovers.txt
 
echo "[+] Scanning for open ports..."
nmap -iL $enterprise/recon/web/httprobe/alive.txt -T4 -oA $enterprise/recon/web/scans/scanned.txt
 
echo "[+] Scraping wayback data..."
cat $enterprise/recon/web/final.txt | waybackurls >> $enterprise/recon/web/wayback/wayback_output.txt
sort -u $enterprise/recon/web/wayback/wayback_output.txt
 
echo "[+] Pulling and compiling all possible params found in wayback data..."
cat $enterprise/recon/web/wayback/wayback_output.txt | grep '?*=' | cut -d '=' -f 1 | sort -u >> $enterprise/recon/web/wayback/params/wayback_params.txt
for line in $(cat $enterprise/recon/web/wayback/params/wayback_params.txt);do echo $line'=';done
 
echo "[+] Pulling and compiling js/php/aspx/jsp/json files from wayback output..."
for line in $(cat $enterprise/recon/web/wayback/wayback_output.txt);do
    ext="${line##*.}"
    if [[ "$ext" == "js" ]]; then
        echo $line >> $enterprise/recon/web/wayback/extensions/js1.txt
        sort -u $enterprise/recon/web/wayback/extensions/js1.txt >> $enterprise/recon/web/wayback/extensions/js.txt
    fi
    if [[ "$ext" == "html" ]];then
        echo $line >> $enterprise/recon/web/wayback/extensions/jsp1.txt
        sort -u $enterprise/recon/web/wayback/extensions/jsp1.txt >> $enterprise/recon/web/wayback/extensions/jsp.txt
    fi
    if [[ "$ext" == "json" ]];then
        echo $line >> $enterprise/recon/web/wayback/extensions/json1.txt
        sort -u $enterprise/recon/web/wayback/extensions/json1.txt >> $enterprise/recon/web/wayback/extensions/json.txt
    fi
    if [[ "$ext" == "php" ]];then
        echo $line >> $enterprise/recon/web/wayback/extensions/php1.txt
        sort -u $enterprise/recon/web/wayback/extensions/php1.txt >> $enterprise/recon/web/wayback/extensions/php.txt
    fi
    if [[ "$ext" == "aspx" ]];then
        echo $line >> $enterprise/recon/web/wayback/extensions/aspx1.txt
        sort -u $enterprise/recon/web/wayback/extensions/aspx1.txt >> $enterprise/recon/web/wayback/extensions/aspx.txt
    fi
done
 
rm $enterprise/recon/web/wayback/extensions/js1.txt
rm $enterprise/recon/web/wayback/extensions/jsp1.txt
rm $enterprise/recon/web/wayback/extensions/json1.txt
rm $enterprise/recon/web/wayback/extensions/php1.txt
rm $enterprise/recon/web/wayback/extensions/aspx1.txt

echo "[+] Running eyewitness against all compiled domains..."
python3 EyeWitness/EyeWitness.py --web -f $enterprise/recon/web/httprobe/alive.txt -d $enterprise/recon/web/eyewitness --resolve

echo "[+] WAF checking..."
wafw00f $url >> $enterprise/recon/web/wafw00f.txt

echo "[+] Double WAF checking..."
whatwaf -u $url >> $enterprise/recon/web/whatwaf.txt

echo "[+] CMS identification checking..."
droopescan scan -u $url >> $enterprise/recon/web/droopescan.txt
