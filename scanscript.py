#!/usr/bin/python3

##########################################################################################################################
# author: sKillseries
# Ce script permet d'automatiser la phase scanning et a pour but d'améliorer mes méthodologies en termes de pentest
###########################################################################################################################

import os

def discoveringhosts():
    pass

def sctpportdiscovery():
    pass

def udpportdiscovery():
    pass

def httpportdiscovery():
    pass

def tcpportdiscovery():
    pass

def icmp():
    cidr = input("Saisissez un cidr si vous souhaitez utiliser une plage d'hôte sinon tapez entrée: ")
    print("""
Avec quel outil voulez vous faire une requête ICMP ?
> 1: ping
> 2: fping
> 3: nmap
> q: Quitter
    """)
    choix = input("Veuillez sélectionner une option: ")
    if choix == "1":
        os.system(f"ping -c {target} > {enterprise}/icmp.txt")
        print(f"Le résultat a été enregistré dans le fichier icmp.txt situé dans le répertoire {enterprise} \n")
        proceed()
    elif choix == "2":
        if len(cidr) == 0:
            os.system(f"fping -g {target} > {enterprise}/icmp.txt")
            print(f"Le résultat a été enregistré dans le fichier icmp.txt situé dans le répertoire {enterprise} \n")
            proceed()
        else:
            os.system(f"fping -g {target}/{cidr} > {enterprise}/icmp.txt")
            print(f"Le résultat a été enregistré dans le fichier icmp.txt situé dans le répertoire {enterprise} \n")
            proceed()
    elif choix == "3":
        if len(cidr) == 0:
            os.system(f"nmap -PEPM -sP -n {target} > {enterprise}/icmp.txt")
            print(f"Le résultat a été enregistré dans le fichier icmp.txt situé dans le répertoire {enterprise} \n")
            proceed()
        else:
            os.system(f"nmap -PEPM -sP -n {target}/{cidr} > {enterprise}/icmp.txt")
            print(f"Le résultat a été enregistré dans le fichier icmp.txt situé dans le répertoire {enterprise} \n")
            proceed()
    elif choix == "q":
        print("fermeture du programme")
        exit(0)
    else:
        print("Je n'ai pas compris votre choix veuillez sélectionner une des options")
        icmp()

def proceed():
    proceed = input("Voulez-vous continuer ? Y/N: ")
    if proceed == "y":
        menu()
    elif proceed == "Y":
        menu()
    elif proceed == "N":
        print("fermeture du programme")
        exit(0)
    elif proceed == "n":
        print("fermeture du programme")
        exit(0)
    else:
        print("Je n'ai pas compris votre demande veuillez sélectionner une des options")
        proceed()

def menu():
    print("""
Que voulez faire ?
> 1: ICMP
> 2: TCP Port Discovery
> 3: HTTP Port Discovery
> 4: UDP Port Discovery
> 5: SCTP Port Discovery
> 6: Discovering hosts
> q: Quitter
    """)
    choix = input("Veullez sélectionner une option: ")
    if choix == "1":
        icmp()
    elif choix =="q":
        print("Fermeture du programme")
        exit(0)
    else:
        print("Veuillez sélectionner une option présente dans la liste")
        menu()

def main():
    global enterprise
    global target
    enterprise = input("Quel est le nom de l'entreprise que vous soouhaitez audité ?: ")
    target = input("Entrez l'adresse IP de la cible: ")
    os.makedirs(enterprise, exist_ok=True)
    print(f"Le répertoire {enterprise} a été créé")
    menu()

if __name__ == '__main__':
    main()