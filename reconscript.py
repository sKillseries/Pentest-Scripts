#!/usr/bin/python3

##########################################################################################################################
# author: sKillseries
# Ce script permet d'automatiser la phase reconnaissance et a pour but d'améliorer mes méthodologies en termes de pentest
###########################################################################################################################
 
import os

def save_result(command, output_file):
    os.system(f"{command} > {output_file}")
    print(f"Le résultat a été enregistré dans le fichier {output_file} situé dans le répertoire {enterprise}\n")

def whois():
    save_result(f"whois {target}", f"{enterprise}/whois.txt")
    proceed()

def nslookup():
    print("""
Quel type de scan voulez-vous effectuer ?
> 1: DNS lookup
> 2: Reverse DNS lookup
> 3: (MX) Mail Exchange lookup
    """)
    option = input("Votre choix : ")
    if option == "1":
        save_result(f"nslookup {target}", f"{enterprise}/dns-lookup.txt")
    elif option == "2":
        ip = input("Veuillez saisir l'IP cible : ")
        save_result(f"nslookup -type=PTR {ip}", f"{enterprise}/reverse-dns-lookup.txt")
    elif option == "3":
        save_result(f"nslookup -type=MX {target}", f"{enterprise}/mx-lookup.txt")
    else:
        print("Je n'ai pas compris votre demande, veuillez sélectionner l'une des options.")
        nslookup()

    proceed()

def dig():
    print("""
Quel type de scan voulez-vous effectuer ?
> 1: SPF
> 2: DMARC
    """)
    option = input("Votre choix : ")
    if option == "1":
        save_result(f"dig txt {target}", f"{enterprise}/spf.txt")
    elif option == "2":
        save_result(f"dig txt _dmarc.{target}", f"{enterprise}/dmarc.txt")
    else:
        print("Je n'ai pas compris votre demande, veuillez sélectionner l'une des options.")
        dig()

    proceed()

def metagoofil():
    numberresult = input("Entrez le nombre de résultats max : ")
    numberfile = input("Entrez le nombre de fichiers désirés : ")
    save_result(f"metagoofil -d {target} -t pdf,doc,xls,ppt,odp,ods,docx,xlsx,pptx -l {numberresult} -n {numberfile}",
                f"{enterprise}/metagoofil.html")
    proceed()

def theharvester():
    save_result(f"theHarvester -d {target} -b google", f"{enterprise}/theHarvester.html")
    proceed()

def dmitry():
    save_result(f"dmitry -wnse {target}", f"{enterprise}/dmitry")
    proceed()

def proceed():
    while True:
        proceed = input("Voulez-vous continuer ? Y/N: ")
        if proceed.lower() == "y":
            menu()
            break
        elif proceed.lower() == "n":
            print("Fermeture du programme")
            exit(0)
        else:
            print("Je n'ai pas compris votre demande, veuillez sélectionner l'une des options.")

def menu():
    print("""
Que voulez-vous faire ?
> 1: Whois
> 2: nslookup
> 3: dig
> 4: metagoofil
> 5: TheHarvester
> 6: Dmitry
> q: Quitter
    """)
    choix = input("Veuillez sélectionner une option: ")
    if choix == "1":
        whois()
    elif choix == "2":
        nslookup()
    elif choix == "3":
        dig()
    elif choix == "4":
        metagoofil()
    elif choix == "5":
        theharvester()
    elif choix == "6":
        dmitry()
    elif choix.lower() == "q":
        print("Fermeture du programme")
        exit(0)
    else:
        print("Veuillez sélectionner une option présente dans la liste.")
        menu()

def main():
    global enterprise
    global target
    enterprise = input("Quel est le nom de l'entreprise que vous souhaitez auditer ? : ")
    target = input("Entrez le domaine cible : ")
    os.makedirs(enterprise, exist_ok=True)
    print(f"Le répertoire {enterprise} a été créé")
    menu()

if __name__ == '__main__':
    main()